name: Build and Push Docker Image for Specific Application

on:
  pull_request:
    branches:
      - main
    paths:
      - 'gateway/**' 
  push:
    branches:
      - main
    paths:
      - 'gateway/**'
  workflow_dispatch:

jobs:
  build:
    environment: OCI_Secrets
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Get current version
        id: get_version
        run: |
          # Se o arquivo VERSION não existir, cria com a versão inicial
          if [ ! -f VERSION ]; then
            echo "1.0.0" > VERSION
          fi
          # Lê a versão atual
          CURRENT_VERSION=$(cat VERSION)
          echo "Current version: $CURRENT_VERSION"

          # Incrementa a versão (incremento de patch)
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          patch=$((patch + 1))  # Incrementa o patch
          NEW_VERSION="$major.$minor.$patch"
          echo "New version: $NEW_VERSION"

          # Salva a nova versão no arquivo VERSION
          echo "$NEW_VERSION" > VERSION
          echo "VERSION=${NEW_VERSION}" >> $GITHUB_ENV

      - name: Build and push Docker image with semantic versioning
        run: |
          if [ -z "${{ env.VERSION }}" ]; then
            echo "VERSION not found, exiting."
            exit 1
          fi
          # Build and push both the versioned tag and latest tag
          docker buildx create --use
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/gateway:${{ env.VERSION }} \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/gateway:latest \
            --push gateway/

      - name: Install Snyk CLI
        run: |
          npm install -g snyk

      - name: Authenticate Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk auth $SNYK_TOKEN

      - name: Scan Docker image for vulnerabilities using Snyk
        run: |
          snyk container test ${{ secrets.DOCKER_HUB_USERNAME }}/gateway:${{ env.VERSION }} || true
