name: Build and Push Docker Image for Specific Application

on:
  pull_request:
    branches:
      - main
    paths:
      - 'gateway/**'
  push:
    branches:
      - main
    paths:
      - 'gateway/**'
  workflow_dispatch:

permissions:
  contents: write  # Garante permissão de escrita no repositório

jobs:
  build:
    environment: OCI_Secrets
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Get version from git tag
        id: get_version
        run: |
          # Usa o último tag semântico ou define uma versão inicial
          VERSION=$(git describe --tags --abbrev=0 || echo "1.0.0")
          echo "Current version: $VERSION"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Build and push Docker image with version
        run: |
          if [ -z "${{ env.VERSION }}" ]; then
            echo "VERSION not found, exiting."
            exit 1
          fi
          docker buildx create --use
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/gateway:${{ env.VERSION }} \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/gateway:latest \
            --push gateway/

      - name: Install Snyk CLI
        run: |
          npm install -g snyk

      - name: Authenticate Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk auth $SNYK_TOKEN

      - name: Scan Docker image for vulnerabilities using Snyk
        run: |
          snyk container test ${{ secrets.DOCKER_HUB_USERNAME }}/gateway:${{ env.VERSION }} || true

  install-kubectl:
    environment: OCI_Secrets
    runs-on: ubuntu-latest
    name: Install Kubectl for OKE
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: "${{ vars.OCI_CLI_REGION }}" 

    steps:
      - name: Configure Kubectl
        uses: oracle-actions/configure-kubectl-oke@v1.5.0
        id: test-configure-kubectl-oke-action
        with:
          cluster: ${{ secrets.OKE_CLUSTER_OCID }}

      - name: Run Kubectl
        run: kubectl get nodes -A
